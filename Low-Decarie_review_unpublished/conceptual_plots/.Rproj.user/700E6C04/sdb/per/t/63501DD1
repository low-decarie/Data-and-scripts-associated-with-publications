{
    "contents" : "rm(list=ls())\nrequire(plyr)\nrequire(ggplot2)\nrequire(reshape)\nrequire(scales)\nrequire(gridExtra)\nlibrary(grid)\n\nsource(\"./R/theme.R\")\ntheme_set(theme_minimal())\n\n\n#create data\nR <- (0:5)/5\na <- 1\nh <- 1\nfunctional_response <- function(R,a,h){\n  #Type II\n  Biomass <- (a*R)/(1+a*h*R)\n  return(Biomass)\n}\n\n# Liebig and serial colimitation ####\n\nliebig <- data.frame(NULL)\nfor(R1 in R){\n  for(R2 in R){\n    #print(paste(R1,R2))\n    temp <- data.frame(R1=R1,\n                       R2=R2,\n                       Biomass=min(c(functional_response(R=R1, a=a, h=h),\n                                   functional_response(R=R2, a=a, h=h))))\n    liebig <- rbind(liebig,temp)\n  }\n}\n                       \n    \n\np <- qplot(data=liebig, \n           x=R1+0.1, xlab=expression(bold(R[1])),\n           y=R2+0.1, ylab=expression(bold(R[2])),\n           fill=Biomass/max(Biomass),\n           geom=\"tile\")\np <- p + scale_y_continuous(labels = percent, limits=c(0,1), expand=c(0,0))\np <- p + scale_x_continuous(labels = percent, limits=c(0,1), expand=c(0,0))\np <- p + scale_fill_gradient(limits=c(0,1),\n                             low=\"white\",\n                             high=\"grey\",\n                             labels = percent)\np <- p + theme(legend.position=\"none\")\n#print(p)\n\nserial <- p + geom_segment(x=0.3,xend=0.7,\n                           y=0.5,yend=0.5, \n                           arrow= arrow(length = unit(0.4,\"cm\"), type=\"closed\"))\nserial <- serial + geom_segment(x=0.7,xend=0.7,\n                           y=0.5,yend=0.9, \n                           arrow= arrow(length = unit(0.4,\"cm\"), type=\"closed\"),\n                           colour=\"darkgrey\")\n#print(serial)\n\n# Liebig and equal values of each resource ####\n\nequal <- p + geom_abline(slope=1, colour=\"azure\", lty=3)\nequal <- equal + geom_segment(x=0.5,xend=0.9,\n                          y=0.5,yend=0.5, \n                          arrow= arrow(length = unit(0.4,\"cm\"), type=\"closed\"))\nequal <- equal + geom_segment(x=0.5,xend=0.5,\n                                y=0.5,yend=0.9, \n                                arrow= arrow(length = unit(0.4,\"cm\"), type=\"closed\"),\n                                colour=\"darkgrey\")\nequal <- equal + geom_segment(x=0.5,xend=0.9,\n                              y=0.48,yend=0.88, \n                              arrow= arrow(length = unit(0.4,\"cm\"), type=\"closed\"))\nequal <- equal + geom_segment(x=0.5,xend=0.9,\n                              y=0.52,yend=0.92, \n                              arrow= arrow(length = unit(0.4,\"cm\"), type=\"closed\"),\n                              colour=\"darkgrey\")\n\nequal <- equal + theme(legend.position=\"none\")\n#print(equal)\n\n\n# Aiding or substitutable resources ####\n\nsubstitutable <- data.frame(NULL)\nfor(R1 in R){\n  for(R2 in R){\n    #print(paste(R1,R2))\n    temp <- data.frame(R1=R1,\n                       R2=R2,\n                       Biomass=prod(c(functional_response(R=R1, a=a, h=h),\n                                     functional_response(R=R2, a=a, h=h))))\n    substitutable <- rbind(substitutable,temp)\n  }\n}\n\nsubstitutable.p <- qplot(data=substitutable, \n           x=R1+0.1, xlab=expression(bold(R[1])),\n           y=R2+0.1, ylab=expression(bold(R[2])),\n           fill=Biomass/max(Biomass),\n           geom=\"tile\")\nsubstitutable.p <- substitutable.p + scale_y_continuous(labels = percent, limits=c(0,1), expand=c(0,0))\nsubstitutable.p <- substitutable.p + scale_x_continuous(labels = percent, limits=c(0,1), expand=c(0,0))\nsubstitutable.p <- substitutable.p + scale_fill_gradient(limits=c(0,1),\n                             low=\"white\",\n                             high=\"grey\",\n                             labels = percent)\n\nsubstitutable.p <- substitutable.p + geom_segment(x=0.3,xend=0.7,\n                              y=0.5,yend=0.5, \n                              arrow= arrow(length = unit(0.4,\"cm\"), type=\"closed\"))\nsubstitutable.p <- substitutable.p + geom_segment(x=0.3,xend=0.3,\n                              y=0.5,yend=0.9, \n                              arrow= arrow(length = unit(0.4,\"cm\"), type=\"closed\"),\n                              colour=\"darkgrey\")\nsubstitutable.p <- substitutable.p + theme(legend.position=\"none\")\n#print(substitutable.p)\n\n# Multiple species with different limitations\n\nSpecies_1 <- data.frame(NULL)\nfor(R1 in R){\n  for(R2 in R){\n    #print(paste(R1,R2))\n    temp <- data.frame(R1=R1,\n                       R2=R2,\n                       Biomass=functional_response(R=R1, a=a, h=h))\n    Species_1 <- rbind(Species_1,temp)\n  }\n}\n\nSpecies_2 <- data.frame(NULL)\nfor(R1 in R){\n  for(R2 in R){\n    #print(paste(R1,R2))\n    temp <- data.frame(R1=R1,\n                       R2=R2,\n                       Biomass=functional_response(R=R2, a=a, h=h))\n    Species_2 <- rbind(Species_2,temp)\n  }\n}\n\nSpecies_1.p <- qplot(data=Species_1,\n                         x=R1+0.1, xlab=expression(bold(R[1])),\n                         y=R2+0.1, ylab=expression(bold(R[2])),\n                         fill=Biomass/max(Biomass),\n                         geom=\"tile\")\nSpecies_1.p <- Species_1.p + scale_y_continuous(labels = percent, limits=c(0,1), expand=c(0,0))\nSpecies_1.p <- Species_1.p + scale_x_continuous(labels = percent, limits=c(0,1), expand=c(0,0))\nSpecies_1.p <- Species_1.p + scale_fill_gradient(limits=c(0,1),\n                                                         low=\"white\",\n                                                         high=\"grey\",\n                                                         labels = percent)\nSpecies_1.p <- Species_1.p + geom_segment(x=0.3,xend=0.7,\n                                    y=0.5,yend=0.5, \n                                    arrow= arrow(length = unit(0.4,\"cm\"), type=\"closed\"))\nSpecies_1.p <- Species_1.p + theme(legend.position=\"none\")\n\n#print(Species_1.p)\n\n\nSpecies_2.p <- qplot(data=Species_2,\n                     x=R1+0.1, xlab=expression(bold(R[1])),\n                     y=R2+0.1, ylab=expression(bold(R[2])),\n                     fill=Biomass/max(Biomass),\n                     geom=\"tile\")\nSpecies_2.p <- Species_2.p + scale_y_continuous(labels = percent, limits=c(0,1), expand=c(0,0))\nSpecies_2.p <- Species_2.p + scale_x_continuous(labels = percent, limits=c(0,1), expand=c(0,0))\nSpecies_2.p <- Species_2.p + scale_fill_gradient(limits=c(0,1),\n                                                 low=\"white\",\n                                                 high=\"grey\",\n                                                 labels = percent)\n\nSpecies_2.p <- Species_2.p + geom_segment(x=0.3,xend=0.3,\n                                                  y=0.5,yend=0.9, \n                              arrow= arrow(length = unit(0.4,\"cm\"), type=\"closed\"),\n                                                  colour=\"darkgrey\")\nSpecies_2.p <- Species_2.p + theme(legend.position=\"none\")\n#print(Species_2.p)\n\npdf(\"./Plots/colimitation.pdf\", width=12)\ngrid.arrange(serial+ggtitle(\"a. Serial co-limitation\")+\n               coord_fixed(),\n equal+ggtitle(\"b. Equally limiting resources\")+\n               coord_fixed(),\n substitutable.p+ggtitle(\"c. Aiding or subsitutable resources\")+\n               coord_fixed(),\n Species_1.p+ggtitle(\"d. Species 1\")+\n               coord_fixed(),\n Species_2.p+ggtitle(\"e. Species 2\")+\n               coord_fixed(),\nsubstitutable.p+ggtitle(\"f. Community\")+\n               coord_fixed(),\n nrow=2)\ngraphics.off()",
    "created" : 1371468704380.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "138387258",
    "id" : "63501DD1",
    "lastKnownWriteTime" : 1371483182,
    "path" : "~/Documents/PhD/Reports/Reviews/conceptual_plots/R/colimitation.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}